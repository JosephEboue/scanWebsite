name: CI/CD Pipeline

on:
  push:
    branches:
      - main

  # workflow_dispatch:
  #   inputs:
  #     deploy_prod:
  #       description: "Déployer en production sur Play-With-Docker"
  #       required: false
  #       default: "false"

# env:
#   PLAYWD: ip172-18-0-21-cukjloi91nsg00dilh5g

jobs:
  build:
    name: 🏗️ Build Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Flask Server Image
        run: docker build --cache-from flask_server -t flask_server ./website/flask_server

      - name: Build Client Image
        run: docker build --cache-from client -t client ./website/client

  test:
    name:  🧪 Run Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Flask Server for Testing
        run: docker build -t flask_server ./website/flask_server

      - name: Run Backend Tests (Flask)
        run: |
          docker run --rm flask_server python -m pytest /app/Test/TestServerRoutes.py

      - name: Build Client for Testing
        run: docker build -t client ./website/client

      # - name: ⚙️ Run Frontend Tests (React)
      #   run: |
      #     docker run --rm client npm test

  push:
    name: 📤 Push Docker Images
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: 🔐 Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🏷️ Tag & Push Flask Server
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          docker tag flask_server ${{ secrets.DOCKERHUB_USERNAME }}/scanwebsite:flask_server-$COMMIT_HASH
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/scanwebsite:flask_server-$COMMIT_HASH

      - name: 🏷️ Tag & Push Client
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          docker tag client ${{ secrets.DOCKERHUB_USERNAME }}/scanwebsite:client-$COMMIT_HASH
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/scanwebsite:client-$COMMIT_HASH

  # deploy_horsProd:
  #   name: 🚀 Deploy to Coolify
  #   runs-on: ubuntu-latest
  #   needs: push

  #   steps:
  #     - name: Trigger Deployment on Coolify
  #       run: curl -X POST ${{ secrets.COOLIFY_DEPLOY_HOOK }}

  # deploy_prod:
  #   name: 🚀 Deploy to Play-With-Docker (Manual)
  #   runs-on: ubuntu-latest
  #   needs: push
  #   if: github.event.inputs.deploy_prod == 'true'
  #   environment:
  #     name: prod
  #     url: http://${{ env.PLAYWD }}-8080.direct.labs.play-with-docker.com

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: 🛠️ Install Docker CLI & Docker Compose
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y docker-compose

  #     - name: 🔌 Connect to Play-With-Docker
  #       run: |
  #         export DOCKER_HOST=tcp://${{ env.PLAYWD }}.direct.labs.play-with-docker.com:2375

  #     - name: 📦 Deploy Application
  #       run: |
  #         docker compose down
  #         docker compose pull
  #         docker compose up -d
